module kant
{
    enum ServerState
    {
        Inactive,
        Activating,
        Active,
        Deactivating,
        Destroying,
        Destroyed,
    };

    struct LoadInfo
    {
        //过去1分钟负载
        0 require  float avg1;
        //过去5分钟负载
        1 require  float avg5;
        //过去15分钟负载
        2 require  float avg15;
        //1分钟内cpu使用率均值
        3 optional int  avgCpu;
     };

    struct PatchInfo
    {
        //是否正在发布
        0 require bool bPatching = false;
        //发布百分比
        1 require int  iPercent;
        //最近百分比修改时间
        2 require int  iModifyTime;
        //版本
        3 require string sVersion;
        //结果描述
        4 require string sResult;
        //发布结果
        5 optional bool bSucc = false;
    };

    struct NodeInfo
    {
        0 require string nodeName;
        1 require string nodeObj;
        2 require string endpointIp;
        3 require int endpointPort;
        4 require short timeOut;
        5 require string dataDir;
        6 optional string version;
        //启动kantnode时，从start.tmp获取，设置的core大小,core file size,因为可能值为unlimited
        7 optional string  coreFileSize;
        //启动kantnode时，从start.tmp获取，设置的open files
        8 optional int    openFiles;
    };

    struct ServerStateInfo
    {
        //present state
        0 require ServerState serverState;
        1 require int processId;
        2 optional string nodeName;
        3 optional string application;
        4 optional string serverName;
        //setting states
        5 optional ServerState settingState;
    };

    struct PatchRequest
    {
        0 require string appname;
        1 require string servername;
        2 require string nodename;
        3 require string groupname;
        4 require string binname;
        5 require string version;
        6 require string user;
        7 require string servertype;
        8 require string patchobj;
        9 require string md5;
        //操作系统类型，如:suse、tlinux等
        10 optional string ostype; 
        // 带路径的发布包文件名，如果未指定filepath，则node将根据appname、servername、version、ostype等按规则组装发布包文件路径；
        // 若已指定filepath，则node从filepath下载发布包，node不检查filepath的合法性。
        11 optional string filepath;
    };
};

