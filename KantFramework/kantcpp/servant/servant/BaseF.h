// **********************************************************************
// This file was generated by a KANT parser!
// KANT version KANT_VERSION.
// **********************************************************************

#ifndef __BASEF_H_
#define __BASEF_H_

#include <map>
#include <string>
#include <vector>
#include "tup/Kant.h"
#include "tup/KantJson.h"
using namespace std;


namespace kant
{
    const kant::Short KANTVERSION = 1;

    const kant::Short TUPVERSION = 3;

    const kant::Short XMLVERSION = 4;

    const kant::Short JSONVERSION = 5;

    const kant::Char KANTNORMAL = 0;

    const kant::Char KANTONEWAY = 1;

    const kant::Int32 KANTSERVERSUCCESS = 0;

    const kant::Int32 KANTSERVERDECODEERR = -1;

    const kant::Int32 KANTSERVERENCODEERR = -2;

    const kant::Int32 KANTSERVERNOFUNCERR = -3;

    const kant::Int32 KANTSERVERNOSERVANTERR = -4;

    const kant::Int32 KANTSERVERRESETGRID = -5;

    const kant::Int32 KANTSERVERQUEUETIMEOUT = -6;

    const kant::Int32 KANTASYNCCALLTIMEOUT = -7;

    const kant::Int32 KANTINVOKETIMEOUT = -7;

    const kant::Int32 KANTPROXYCONNECTERR = -8;

    const kant::Int32 KANTSERVEROVERLOAD = -9;

    const kant::Int32 KANTADAPTERNULL = -10;

    const kant::Int32 KANTINVOKEBYINVALIDESET = -11;

    const kant::Int32 KANTCLIENTDECODEERR = -12;

    const kant::Int32 KANTSENDREQUESTERR = -13;

    const kant::Int32 KANTSERVERUNKNOWNERR = -99;

    const kant::Int32 KANTMESSAGETYPENULL = 0;

    const kant::Int32 KANTMESSAGETYPEHASH = 1;

    const kant::Int32 KANTMESSAGETYPEGRID = 2;

    const kant::Int32 KANTMESSAGETYPEDYED = 4;

    const kant::Int32 KANTMESSAGETYPESAMPLE = 8;

    const kant::Int32 KANTMESSAGETYPEASYNC = 16;

    const kant::Int32 KANTMESSAGETYPESETNAME = 128;

    const kant::Int32 KANTMESSAGETYPETRACE = 256;


}



#endif
